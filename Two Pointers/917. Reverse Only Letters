Given a string S, return the "reversed" string where all characters that are not a letter stay in the same place, and all letters reverse their positions.

Example 1:
Input: "ab-cd"
Output: "dc-ba"

Example 2:
Input: "a-bC-dEf-ghIj"
Output: "j-Ih-gfE-dCba"

Example 3:
Input: "Test1ng-Leet=code-Q!"
Output: "Qedo1ct-eeLg=ntse-T!"

Note:
S.length <= 100
33 <= S[i].ASCIIcode <= 122 
S doesn't contain \ or "


// 2 pointers
class Solution {
public:
    string reverseOnlyLetters(string S) {
        int n = S.size(), i = 0, j = n - 1;
        while (i < j) {
            if (!isalpha(S[i])) ++i;
            else if (!isalpha(S[j])) --j;
            else {
                swap(S[i], S[j]);
                ++i; --j;
            }
        }
        return S;
    }
};


// brute force
class Solution {
public:
    string reverseOnlyLetters(string S) {
        string res = "";
        for (int i = (int)S.size() - 1; i >= 0; --i) {
            if (isalpha(S[i])) res.push_back(S[i]);
        }
        for (int i = 0; i < S.size(); ++i) {
            if (isalpha(S[i])) continue;
            res.insert(res.begin() + i, S[i]);
        }
        return res;
    }
};
